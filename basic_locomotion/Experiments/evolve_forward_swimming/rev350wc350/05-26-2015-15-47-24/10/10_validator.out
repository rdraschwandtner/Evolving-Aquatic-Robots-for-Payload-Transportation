Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=0, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.623844744847 frqs:1.84378318663 phss:0.709470279093
(501, 51)
(501, 68)
[76.17218120483454, 0.0, 11.975099679548194]
fitness=76.1721812048
50
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=50, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.459460338632 frqs:2.0023948559 phss:0.675496473171
(501, 51)
(501, 68)
[97.20115873667434, 0.0, -3.578274134286873]
fitness=97.2011587367
100
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=100, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.459440913439 frqs:2.00239485573 phss:0.675496473662
(501, 51)
(501, 68)
[97.20118912926199, 0.0, -3.590274134148482]
fitness=97.2011891293
150
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=150, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.45944072433 frqs:2.00239485573 phss:0.675496473662
(501, 51)
(501, 68)
[97.2011894025392, 0.0, -3.5903910208400305]
fitness=97.2011894025
200
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=200, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.45944072433 frqs:2.00239485573 phss:0.675496473662
(501, 51)
(501, 68)
[97.2011894025392, 0.0, -3.5903910208400305]
fitness=97.2011894025
250
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=250, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.45944072433 frqs:2.00239485573 phss:0.675496473662
(501, 51)
(501, 68)
[97.2011894025392, 0.0, -3.5903910208400305]
fitness=97.2011894025
300
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=300, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.45944072433 frqs:2.00239485573 phss:0.675496473662
(501, 51)
(501, 68)
[97.2011894025392, 0.0, -3.5903910208400305]
fitness=97.2011894025
350
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=350, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.45944072433 frqs:2.00239485573 phss:0.675496473662
(501, 51)
(501, 68)
[97.2011894025392, 0.0, -3.5903910208400305]
fitness=97.2011894025
400
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=400, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.45944072433 frqs:2.00239485573 phss:0.675496473662
(501, 51)
(501, 68)
[97.2011894025392, 0.0, -3.5903910208400305]
fitness=97.2011894025
450
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=450, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.45944072433 frqs:2.00239485573 phss:0.675496473662
(501, 51)
(501, 68)
[97.2011894025392, 0.0, -3.5903910208400305]
fitness=97.2011894025
500
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=500, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.45944072433 frqs:2.00239485573 phss:0.675496473662
(501, 51)
(501, 68)
[97.2011894025392, 0.0, -3.5903910208400305]
fitness=97.2011894025
550
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=550, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.45944072433 frqs:2.00239485573 phss:0.675496473662
(501, 51)
(501, 68)
[97.2011894025392, 0.0, -3.5903910208400305]
fitness=97.2011894025
600
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=600, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.45944072433 frqs:2.00239485573 phss:0.675704165034
(501, 51)
(501, 68)
[97.20177704227748, 0.0, -3.6290559379083485]
fitness=97.2017770423
650
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=650, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.459673324924 frqs:2.00239485573 phss:0.675704165034
(501, 51)
(501, 68)
[97.20191655482208, 0.0, -3.4968354560055914]
fitness=97.2019165548
700
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=700, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.459673324924 frqs:2.00239485573 phss:0.675704165034
(501, 51)
(501, 68)
[97.20191655482208, 0.0, -3.4968354560055914]
fitness=97.2019165548
750
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=750, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.459673324924 frqs:2.00239485573 phss:0.675704165034
(501, 51)
(501, 68)
[97.20191655482208, 0.0, -3.4968354560055914]
fitness=97.2019165548
800
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=800, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.459673324924 frqs:2.00243046375 phss:0.675704165034
(501, 51)
(501, 68)
[97.20203707692517, 0.0, -3.50498226046235]
fitness=97.2020370769
850
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=850, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.459673324924 frqs:2.00243046375 phss:0.675704165034
(501, 51)
(501, 68)
[97.20203707694176, 0.0, -3.5049822605114307]
fitness=97.2020370769
900
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=900, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.459556574282 frqs:2.00241431281 phss:0.675704165034
(501, 51)
(501, 68)
[97.20228394696444, 0.0, -3.5779916651371364]
fitness=97.202283947
950
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=950, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.459556574308 frqs:2.00241427046 phss:0.675704165034
(501, 51)
(501, 68)
[97.20228406238641, 0.0, -3.577992067159144]
fitness=97.2022840624
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=999, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming/rev350wc350/05-26-2015-15-47-24/', pop_size=100, run_num=10, validator=True)
amps:0.459556574308 frqs:2.00241427046 phss:0.675704165034
(501, 51)
(501, 68)
[97.20228406238641, 0.0, -3.577992067159144]
fitness=97.2022840624
