Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=0, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.799051430933 frqs:1.08158840479 phss:0.560066904242
(501, 54)
(501, 72)
[13.211413125586317, 0.00029535971387417703, -2.1787944884833697]
fitness=13.2114131256
50
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=50, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.6980704347 frqs:1.08158840479 phss:0.34767646121
(501, 54)
(501, 72)
[24.59668580965311, 0.00047339900236087473, -3.631195926115532]
fitness=24.5966858097
100
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=100, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.702541982463 frqs:1.08158840479 phss:0.34767646121
(501, 54)
(501, 72)
[24.650775758995145, -0.0004993225797176315, -2.8149886098030534]
fitness=24.650775759
150
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=150, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.702541982463 frqs:1.08158840479 phss:0.34767646121
(501, 54)
(501, 72)
[24.650775758995145, -0.0004993225797176315, -2.8149886098030534]
fitness=24.650775759
200
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=200, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.811812416923 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.25386677838216, 0.0042281461385502705, -0.8201348161146631]
fitness=25.2538667784
250
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=250, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
300
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=300, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
350
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=350, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
400
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=400, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
450
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=450, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
500
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=500, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
550
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=550, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
600
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=600, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
650
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=650, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
700
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=700, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
750
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=750, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
800
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=800, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
850
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=850, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
900
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=900, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
950
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=950, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=999, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=5, validator=True)
target @ x,z (-12,-3)
amps:0.798612067365 frqs:1.10536021041 phss:0.34767646121
(501, 54)
(501, 72)
[25.640082197621453, -0.000772028771100497, -0.10913396440182797]
fitness=25.6400821976
