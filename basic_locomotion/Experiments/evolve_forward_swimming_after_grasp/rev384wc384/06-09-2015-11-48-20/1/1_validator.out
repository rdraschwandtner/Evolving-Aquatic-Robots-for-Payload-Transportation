Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=0, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.454774190458 frqs:1.48332927832 phss:0.62912996609
(501, 54)
(501, 72)
[15.118408802279998, 1.7763568394002505e-15, 22.31936558697208]
fitness=15.1184088023
50
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=50, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.649225474425 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.552643172002796, -6.61368078413993e-07, 12.918812107663031]
fitness=24.552643172
100
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=100, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.649225474425 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.552643172002796, -6.61368078413993e-07, 12.918812107663031]
fitness=24.552643172
150
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=150, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.649225474425 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.552643172002796, -6.61368078413993e-07, 12.918812107663031]
fitness=24.552643172
200
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=200, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
250
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=250, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
300
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=300, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
350
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=350, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
400
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=400, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
450
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=450, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
500
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=500, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
550
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=550, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
600
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=600, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
650
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=650, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
700
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=700, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
750
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=750, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
800
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=800, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
850
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=850, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
900
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=900, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
950
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=950, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.645946435266 frqs:1.48891667693 phss:0.731688641284
(501, 54)
(501, 72)
[24.557922814203437, -4.440892098500626e-16, 13.377674778958074]
fitness=24.5579228142
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=999, num_joints=16, output_path='/scratch/rened/experiments/evolve_forward_swimming_after_grasp/rev384wc384/06-09-2015-11-48-20/', pop_size=100, run_num=1, validator=True)
target @ x,z (-12,-3)
amps:0.590734084793 frqs:1.81676687136 phss:0.731688641284
(501, 54)
(501, 72)
[24.725780272411544, -4.551914400963142e-15, 19.57090424217052]
fitness=24.7257802724
