Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=0, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.553030448521 frqs:2.08731437001 phss:0.891009926529
(501, 54)
(501, 72)
[12.77362928985998, -3.3306690738754696e-15, 19.478666755384502]
fitness=12.7736292899
50
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=50, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.61209842695 frqs:1.82366880236 phss:0.750768981269
(501, 54)
(501, 72)
[24.910934438375627, 1.6653345369377348e-14, 18.592270564142616]
fitness=24.9109344384
100
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=100, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.61209842695 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.911054584284436, 1.2937147867875254e-05, 18.59222006821051]
fitness=24.9110545843
150
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=150, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613535138792 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.915136702968645, 8.881784197001252e-15, 18.434501265341577]
fitness=24.915136703
200
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=200, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613559562922 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.922304472351207, 4.978527901045027e-08, 18.450694531369518]
fitness=24.9223044724
250
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=250, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613559562922 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.922304472351207, 4.978527901045027e-08, 18.450694531369518]
fitness=24.9223044724
300
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=300, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613559562922 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.922304472351207, 4.978527901045027e-08, 18.450694531369518]
fitness=24.9223044724
350
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=350, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613559562922 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.922304472351207, 4.978527901045027e-08, 18.450694531369518]
fitness=24.9223044724
400
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=400, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613559562922 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.922304472351207, 4.978527901045027e-08, 18.450694531369518]
fitness=24.9223044724
450
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=450, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613559562922 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.922304472351207, 4.978527901045027e-08, 18.450694531369518]
fitness=24.9223044724
500
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=500, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613569277179 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.924394082674485, -4.912784989929975e-08, 18.450357068085275]
fitness=24.9243940827
550
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=550, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613569277179 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.924394082674485, -4.912784989929975e-08, 18.450357068085275]
fitness=24.9243940827
600
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=600, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613569277179 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.924394082674485, -4.912784989929975e-08, 18.450357068085275]
fitness=24.9243940827
650
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=650, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613569277179 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.924394082674485, -4.912784989929975e-08, 18.450357068085275]
fitness=24.9243940827
700
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=700, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613569277179 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.924394082674485, -4.912784989929975e-08, 18.450357068085275]
fitness=24.9243940827
750
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=750, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613569277179 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.924394082674485, -4.912784989929975e-08, 18.450357068085275]
fitness=24.9243940827
800
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=800, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613569277179 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.924394082674485, -4.912784989929975e-08, 18.450357068085275]
fitness=24.9243940827
850
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=850, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613569277179 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.924394082674485, -4.912784989929975e-08, 18.450357068085275]
fitness=24.9243940827
900
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=900, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613569277179 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.924394082674485, -4.912784989929975e-08, 18.450357068085275]
fitness=24.9243940827
950
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=950, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613569277179 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.924394082674485, -4.912784989929975e-08, 18.450357068085275]
fitness=24.9243940827
Tip: install the OpenCV computer vision library (2.0+) with Python bindings
     to get convenient neural network visualization to NumPy arrays
Namespace(eval_time=10.0, gens=999, num_joints=16, output_path='/scratch/rened/experiments/evolve_folded_forward_swimming/rev373wc373/06-02-2015-16-33-20/', pop_size=100, run_num=12, validator=True)
target @ x,z (-12,-3)
amps:0.613569277179 frqs:1.82366880236 phss:0.750768970917
(501, 54)
(501, 72)
[24.924394082674485, -4.912784989929975e-08, 18.450357068085275]
fitness=24.9243940827
